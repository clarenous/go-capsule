syntax = "proto3";
package api;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service APIService {

    rpc GetBestBlock (google.protobuf.Empty) returns (GetBestBlockResponse) {
        option (google.api.http) = {
            get: "/v1/blocks/best"
        };
    }
    rpc GetBlock (GetBlockRequest) returns (GetBlockResponse) {
        option (google.api.http) = {
            get: "/v1/blocks/{id}"
        };
    }
    rpc GetBlockHeader (GetBlockHeaderRequest) returns (GetBlockHeaderResponse) {
        option (google.api.http) = {
            get: "/v1/blocks/{id}/header"
        };
    }
    rpc GetBlockVerboseV0 (GetBlockVerboseRequest) returns (GetBlockVerboseV0Response) {
        option (google.api.http) = {
            get: "/v1/blocks/{id}/verbose/0"
        };
    }
    rpc GetBlockVerboseV1 (GetBlockVerboseRequest) returns (GetBlockVerboseV1Response) {
        option (google.api.http) = {
            get: "/v1/blocks/{id}/verbose/1"
        };
    }
    rpc GetTransaction (GetTransactionRequest) returns (GetTransactionResponse) {
        option (google.api.http) = {
            get: "/v1/transactions/{txid}"
        };
    }
    rpc GetEvidence (GetEvidenceRequest) returns (GetEvidenceResponse) {
        option (google.api.http) = {
            get: "/v1/evidences/{evid}"
        };
    }

    rpc GetWalletStatus (google.protobuf.Empty) returns (GetWalletStatusResponse) {
        option (google.api.http) = {
            get: "/v1/wallet/status"
        };
    }
    rpc GetWalletAddresses (google.protobuf.Empty) returns (GetWalletAddressesResponse) {
        option (google.api.http) = {
            get: "/v1/wallet/addresses"
        };
    }
    rpc GetWalletBalance (google.protobuf.Empty) returns (GetWalletBalanceResponse) {
        option (google.api.http) = {
            get: "/v1/wallet/balance"
        };
    }
    rpc GetWalletTransactions (google.protobuf.Empty) returns (GetWalletTransactionsResponse )
    {
        option (google.api.http) = {
            get: "/v1/wallet/transactions"
        };
    }
    rpc GetWalletEvidences (google.protobuf.Empty) returns (GetWalletEvidencesResponse) {
        option (google.api.http) = {
            get: "/v1/wallet/evidences"
        };
    }
    rpc CreateAddress (CreateAddressRequest) returns (CreateAddressResponse) {
        option (google.api.http) = {
            post: "/v1/wallet/addresses"
        };
    }
    rpc CreateTransaction (CreateTransactionRequest) returns (CreateTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/wallet/transactions/creating"
        };
    }
    rpc SendTransaction (SendTransactionRequest) returns (SendTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/wallet/transactions/sending"
        };
    }

    rpc GetClientStatus (google.protobuf.Empty) returns (GetClientStatusResponse) {
        option (google.api.http) = {
            post: "/v1/client/status"
        };
    }

}

message GetBestBlockResponse {
    uint64 height = 1;
    string hash = 2;
}

message Proof {
    uint64 target = 1;
    uint64 nonce  = 2;
}

message GetBlockRequest {
    string id = 1;
}

message GetBlockResponse {
    string          hash             = 1;
    string          chain_id         = 2;
    uint64          version          = 3;
    uint64          height           = 4;
    uint64          timestamp        = 5;
    string          previous         = 6;
    string          transaction_root = 7;
    string          witness_root     = 8;
    Proof           proof            = 9;
    repeated string transactions     = 10;
    repeated string evidences        = 11;
}

message GetBlockHeaderRequest {
    string id = 1;
}

message GetBlockHeaderResponse {
    string hash             = 1;
    string chain_id         = 2;
    uint64 version          = 3;
    uint64 height           = 4;
    uint64 timestamp        = 5;
    string previous         = 6;
    string transaction_root = 7;
    string witness_root     = 8;
    Proof  proof            = 9;
}

message GetBlockVerboseRequest {
    string id      = 1;
}

message GetBlockVerboseV0Response {
    message Transaction {
        string          txid      = 1;
        repeated string evidences = 2;
    }
    string               hash             = 1;
    string               chain_id         = 2;
    uint64               version          = 3;
    uint64               height           = 4;
    uint64               timestamp        = 5;
    string               previous         = 6;
    string               transaction_root = 7;
    string               witness_root     = 8;
    Proof                proof            = 9;
    repeated Transaction transactions     = 10;
}

message GetBlockVerboseV1Response {
    string      hash             = 1;
    string      chain_id         = 2;
    uint64      version          = 3;
    uint64      height           = 4;
    uint64      timestamp        = 5;
    string      previous         = 6;
    string      transaction_root = 7;
    string      witness_root     = 8;
    Proof       proof            = 9;
    repeated Tx transactions     = 10;
}

message Tx {
    message TxIn {
        message ValueSource {
            string    txid  = 1;
            uint64    index = 2;
        }
        ValueSource value_source  = 1;
        string      redeem_script = 2;
        string      unlock_script = 3;
        uint64      sequence      = 4;
    }
    message TxOut {
        uint64 value       = 1;
        string script_hash = 2;
    }
    string            txid      = 1;
    uint64            version   = 2;
    repeated TxIn     inputs    = 3;
    repeated TxOut    outputs   = 4;
    repeated Evidence evidences = 5;
    uint64            lock_time = 6;
}

message Evidence {
    string  evid         = 1;
    string  digest       = 2;
    string  source       = 3;
    string  valid_script = 4;
}

message GetTransactionRequest {
    string txid = 1;
}

message GetTransactionResponse {
    message TxIn {
        message ValueSource {
            string    txid  = 1;
            uint64    index = 2;
        }
        ValueSource value_source  = 1;
        string      redeem_script = 2;
        string      unlock_script = 3;
        uint64      sequence      = 4;
    }
    message TxOut {
        uint64 value       = 1;
        string script_hash = 2;
    }
    string            txid       = 1;
    uint64            version    = 2;
    repeated TxIn     inputs     = 3;
    repeated TxOut    outputs    = 4;
    repeated Evidence evidences  = 5;
    uint64            lock_time  = 6;
}

message GetEvidenceRequest {
    string evid = 1;
}

message GetEvidenceResponse {
    string  txid         = 1;
    uint64  index        = 2;
    string  evid         = 3;
    string  digest       = 4;
    string  source       = 5;
    string  valid_script = 6;
}

message GetWalletStatusResponse {
    uint32 tx_count   = 1;
    uint32 evid_count = 2;
    uint64 balance    = 3;
}

message GetWalletAddressesResponse {
    message Address {
        string address = 1;
        float  balance = 2;
    }
    repeated Address addresses = 1;
}

message GetWalletBalanceResponse {
    float balance = 1;
}

message GetWalletTransactionsResponse {
    repeated string transactions = 1;
}

message GetWalletEvidencesResponse {
    repeated string evidences = 1;
}

message CreateAddressRequest {
    string password = 1;
}

message CreateAddressResponse {
    string address = 1;
    bool   success = 2;
    string error   = 3;
}

message CreateTransactionRequest {
    string to_address  = 1;
    float  value       = 2;
    string file        = 3;
    string digest_mode = 4;
}

message CreateTransactionResponse {
    string hex     = 1;
    bool   success = 2;
    string error   = 3;
}

message SendTransactionRequest {
    string hex      = 1;
    string password = 2;
}

message SendTransactionResponse {
    string txid    = 1;
    bool   success = 2;
    string error   = 3;
}

message GetClientStatusResponse {
    uint64 local_best_height = 1;
    uint64 known_best_height = 2;
    bool   mining            = 3;
    bool   peer_listening    = 4;
}