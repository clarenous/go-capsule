// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	GetBestBlockResponse
*/
package api

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetBestBlockResponse struct {
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GetBestBlockResponse) Reset()                    { *m = GetBestBlockResponse{} }
func (m *GetBestBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBestBlockResponse) ProtoMessage()               {}
func (*GetBestBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{0} }

func (m *GetBestBlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBestBlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func init() {
	proto.RegisterType((*GetBestBlockResponse)(nil), "api.GetBestBlockResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for APIService service

type APIServiceClient interface {
	GetBestBlock(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetBestBlockResponse, error)
}

type aPIServiceClient struct {
	cc *grpc.ClientConn
}

func NewAPIServiceClient(cc *grpc.ClientConn) APIServiceClient {
	return &aPIServiceClient{cc}
}

func (c *aPIServiceClient) GetBestBlock(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetBestBlockResponse, error) {
	out := new(GetBestBlockResponse)
	err := grpc.Invoke(ctx, "/api.APIService/GetBestBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for APIService service

type APIServiceServer interface {
	GetBestBlock(context.Context, *google_protobuf1.Empty) (*GetBestBlockResponse, error)
}

func RegisterAPIServiceServer(s *grpc.Server, srv APIServiceServer) {
	s.RegisterService(&_APIService_serviceDesc, srv)
}

func _APIService_GetBestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetBestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.APIService/GetBestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetBestBlock(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.APIService",
	HandlerType: (*APIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBestBlock",
			Handler:    _APIService_GetBestBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptorApi) }

var fileDescriptorApi = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x94, 0x92, 0x49, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc,
	0xcf, 0x2b, 0x86, 0x28, 0x91, 0x92, 0x86, 0xca, 0x82, 0x79, 0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9,
	0x05, 0x25, 0x95, 0x10, 0x49, 0x25, 0x27, 0x2e, 0x11, 0xf7, 0xd4, 0x12, 0xa7, 0xd4, 0xe2, 0x12,
	0xa7, 0x9c, 0xfc, 0xe4, 0xec, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x31, 0x2e,
	0xb6, 0x8c, 0xd4, 0xcc, 0xf4, 0x8c, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x96, 0x20, 0x28, 0x4f,
	0x48, 0x88, 0x8b, 0x25, 0x23, 0xb1, 0x38, 0x43, 0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc,
	0x36, 0xca, 0xe0, 0xe2, 0x72, 0x0c, 0xf0, 0x0c, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x8a,
	0xe2, 0xe2, 0x41, 0x36, 0x51, 0x48, 0x4c, 0x0f, 0x62, 0xbf, 0x1e, 0xcc, 0x7e, 0x3d, 0x57, 0x90,
	0xfd, 0x52, 0x92, 0x7a, 0x20, 0x5f, 0x60, 0xb3, 0x5c, 0x49, 0xbc, 0xe9, 0xf2, 0x93, 0xc9, 0x4c,
	0x82, 0x42, 0xfc, 0xfa, 0x65, 0x86, 0xfa, 0x49, 0x20, 0xa9, 0x62, 0xfd, 0xa4, 0xd4, 0xe2, 0x92,
	0x24, 0x36, 0xb0, 0x19, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x82, 0xea, 0xf7, 0xce, 0x01,
	0x01, 0x00, 0x00,
}
