// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	GetBestBlockResponse
	Proof
	GetBlockRequest
	GetBlockResponse
	GetBlockHeaderRequest
	GetBlockHeaderResponse
*/
package api

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetBestBlockResponse struct {
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GetBestBlockResponse) Reset()                    { *m = GetBestBlockResponse{} }
func (m *GetBestBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBestBlockResponse) ProtoMessage()               {}
func (*GetBestBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{0} }

func (m *GetBestBlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBestBlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Proof struct {
	Target uint64 `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Nonce  uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (m *Proof) Reset()                    { *m = Proof{} }
func (m *Proof) String() string            { return proto.CompactTextString(m) }
func (*Proof) ProtoMessage()               {}
func (*Proof) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{1} }

func (m *Proof) GetTarget() uint64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *Proof) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type GetBlockRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *GetBlockRequest) Reset()                    { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()               {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{2} }

func (m *GetBlockRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetBlockResponse struct {
	Hash            string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ChainId         string   `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Version         uint64   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Height          uint64   `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp       uint64   `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Previous        string   `protobuf:"bytes,6,opt,name=previous,proto3" json:"previous,omitempty"`
	TransactionRoot string   `protobuf:"bytes,7,opt,name=transaction_root,json=transactionRoot,proto3" json:"transaction_root,omitempty"`
	WitnessRoot     string   `protobuf:"bytes,8,opt,name=witness_root,json=witnessRoot,proto3" json:"witness_root,omitempty"`
	Proof           *Proof   `protobuf:"bytes,9,opt,name=proof" json:"proof,omitempty"`
	Transactions    []string `protobuf:"bytes,10,rep,name=transactions" json:"transactions,omitempty"`
	Evidences       []string `protobuf:"bytes,11,rep,name=evidences" json:"evidences,omitempty"`
}

func (m *GetBlockResponse) Reset()                    { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()               {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{3} }

func (m *GetBlockResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetBlockResponse) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *GetBlockResponse) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetBlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBlockResponse) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GetBlockResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *GetBlockResponse) GetTransactionRoot() string {
	if m != nil {
		return m.TransactionRoot
	}
	return ""
}

func (m *GetBlockResponse) GetWitnessRoot() string {
	if m != nil {
		return m.WitnessRoot
	}
	return ""
}

func (m *GetBlockResponse) GetProof() *Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (m *GetBlockResponse) GetTransactions() []string {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *GetBlockResponse) GetEvidences() []string {
	if m != nil {
		return m.Evidences
	}
	return nil
}

type GetBlockHeaderRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *GetBlockHeaderRequest) Reset()                    { *m = GetBlockHeaderRequest{} }
func (m *GetBlockHeaderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockHeaderRequest) ProtoMessage()               {}
func (*GetBlockHeaderRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{4} }

func (m *GetBlockHeaderRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetBlockHeaderResponse struct {
	Hash            string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ChainId         string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Version         uint64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Height          uint64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp       uint64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Previous        string `protobuf:"bytes,6,opt,name=previous,proto3" json:"previous,omitempty"`
	TransactionRoot string `protobuf:"bytes,7,opt,name=transaction_root,json=transactionRoot,proto3" json:"transaction_root,omitempty"`
	WitnessRoot     string `protobuf:"bytes,8,opt,name=witness_root,json=witnessRoot,proto3" json:"witness_root,omitempty"`
	Proof           *Proof `protobuf:"bytes,9,opt,name=proof" json:"proof,omitempty"`
}

func (m *GetBlockHeaderResponse) Reset()                    { *m = GetBlockHeaderResponse{} }
func (m *GetBlockHeaderResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockHeaderResponse) ProtoMessage()               {}
func (*GetBlockHeaderResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{5} }

func (m *GetBlockHeaderResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetBlockHeaderResponse) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *GetBlockHeaderResponse) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetBlockHeaderResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *GetBlockHeaderResponse) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GetBlockHeaderResponse) GetPrevious() string {
	if m != nil {
		return m.Previous
	}
	return ""
}

func (m *GetBlockHeaderResponse) GetTransactionRoot() string {
	if m != nil {
		return m.TransactionRoot
	}
	return ""
}

func (m *GetBlockHeaderResponse) GetWitnessRoot() string {
	if m != nil {
		return m.WitnessRoot
	}
	return ""
}

func (m *GetBlockHeaderResponse) GetProof() *Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func init() {
	proto.RegisterType((*GetBestBlockResponse)(nil), "api.GetBestBlockResponse")
	proto.RegisterType((*Proof)(nil), "api.Proof")
	proto.RegisterType((*GetBlockRequest)(nil), "api.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "api.GetBlockResponse")
	proto.RegisterType((*GetBlockHeaderRequest)(nil), "api.GetBlockHeaderRequest")
	proto.RegisterType((*GetBlockHeaderResponse)(nil), "api.GetBlockHeaderResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for APIService service

type APIServiceClient interface {
	GetBestBlock(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetBestBlockResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	GetBlockHeader(ctx context.Context, in *GetBlockHeaderRequest, opts ...grpc.CallOption) (*GetBlockHeaderResponse, error)
}

type aPIServiceClient struct {
	cc *grpc.ClientConn
}

func NewAPIServiceClient(cc *grpc.ClientConn) APIServiceClient {
	return &aPIServiceClient{cc}
}

func (c *aPIServiceClient) GetBestBlock(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetBestBlockResponse, error) {
	out := new(GetBestBlockResponse)
	err := grpc.Invoke(ctx, "/api.APIService/GetBestBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := grpc.Invoke(ctx, "/api.APIService/GetBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetBlockHeader(ctx context.Context, in *GetBlockHeaderRequest, opts ...grpc.CallOption) (*GetBlockHeaderResponse, error) {
	out := new(GetBlockHeaderResponse)
	err := grpc.Invoke(ctx, "/api.APIService/GetBlockHeader", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for APIService service

type APIServiceServer interface {
	GetBestBlock(context.Context, *google_protobuf1.Empty) (*GetBestBlockResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	GetBlockHeader(context.Context, *GetBlockHeaderRequest) (*GetBlockHeaderResponse, error)
}

func RegisterAPIServiceServer(s *grpc.Server, srv APIServiceServer) {
	s.RegisterService(&_APIService_serviceDesc, srv)
}

func _APIService_GetBestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetBestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.APIService/GetBestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetBestBlock(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.APIService/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetBlockHeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockHeaderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetBlockHeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.APIService/GetBlockHeader",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetBlockHeader(ctx, req.(*GetBlockHeaderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.APIService",
	HandlerType: (*APIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBestBlock",
			Handler:    _APIService_GetBestBlock_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _APIService_GetBlock_Handler,
		},
		{
			MethodName: "GetBlockHeader",
			Handler:    _APIService_GetBlockHeader_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptorApi) }

var fileDescriptorApi = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x53, 0x4d, 0x8e, 0xd3, 0x4c,
	0x10, 0x55, 0x9c, 0x5f, 0x57, 0xa2, 0xc9, 0x7c, 0xad, 0x4c, 0xbe, 0x1e, 0xcf, 0x08, 0x79, 0xbc,
	0x21, 0x6c, 0x6c, 0x31, 0x88, 0x03, 0x10, 0x09, 0xc1, 0xec, 0x22, 0xb3, 0x63, 0x33, 0xea, 0xd8,
	0x35, 0x71, 0x8b, 0x49, 0xb7, 0x71, 0x77, 0x8c, 0x10, 0x62, 0xc3, 0x15, 0x38, 0x02, 0xe2, 0x44,
	0x1c, 0x80, 0x0d, 0x07, 0x41, 0x6e, 0xdb, 0x89, 0x1d, 0x0d, 0x9c, 0x80, 0x9d, 0x5f, 0xd5, 0xab,
	0x7a, 0xd5, 0xf5, 0x5c, 0x60, 0xb3, 0x94, 0xfb, 0x69, 0x26, 0xb5, 0x24, 0x5d, 0x96, 0x72, 0xe7,
	0x72, 0x23, 0xe5, 0xe6, 0x1e, 0x03, 0x96, 0xf2, 0x80, 0x09, 0x21, 0x35, 0xd3, 0x5c, 0x0a, 0x55,
	0x52, 0x9c, 0x8b, 0x2a, 0x6b, 0xd0, 0x7a, 0x77, 0x17, 0xe0, 0x36, 0xd5, 0x1f, 0xcb, 0xa4, 0xb7,
	0x84, 0xd9, 0x2b, 0xd4, 0x4b, 0x54, 0x7a, 0x79, 0x2f, 0xa3, 0x77, 0x21, 0xaa, 0x54, 0x0a, 0x85,
	0x64, 0x0e, 0x83, 0x04, 0xf9, 0x26, 0xd1, 0xb4, 0xe3, 0x76, 0x16, 0xbd, 0xb0, 0x42, 0x84, 0x40,
	0x2f, 0x61, 0x2a, 0xa1, 0x96, 0xdb, 0x59, 0xd8, 0xa1, 0xf9, 0xf6, 0x9e, 0x43, 0x7f, 0x95, 0x49,
	0x79, 0x57, 0x14, 0x69, 0x96, 0x6d, 0x70, 0x5f, 0x54, 0x22, 0x32, 0x83, 0xbe, 0x90, 0x22, 0x42,
	0x53, 0xd5, 0x0b, 0x4b, 0xe0, 0x5d, 0xc1, 0xb4, 0x90, 0x2e, 0x65, 0xdf, 0xef, 0x50, 0x69, 0x72,
	0x02, 0x16, 0x8f, 0x4d, 0xb1, 0x1d, 0x5a, 0x3c, 0xf6, 0x7e, 0x5a, 0x70, 0x7a, 0xe0, 0x54, 0xa3,
	0xd5, 0x23, 0x74, 0x0e, 0x23, 0x90, 0x73, 0x18, 0x45, 0x09, 0xe3, 0xe2, 0x96, 0xc7, 0xd5, 0x68,
	0x43, 0x83, 0x6f, 0x62, 0x42, 0x61, 0x98, 0x63, 0xa6, 0xb8, 0x14, 0xb4, 0x6b, 0xe4, 0x6b, 0xd8,
	0x78, 0x63, 0xaf, 0xf5, 0xc6, 0x4b, 0xb0, 0x35, 0xdf, 0xa2, 0xd2, 0x6c, 0x9b, 0xd2, 0xbe, 0x49,
	0x1d, 0x02, 0xc4, 0x81, 0x51, 0x9a, 0x61, 0xce, 0xe5, 0x4e, 0xd1, 0x81, 0x91, 0xda, 0x63, 0xf2,
	0x04, 0x4e, 0x75, 0xc6, 0x84, 0x62, 0x51, 0x61, 0xc0, 0x6d, 0x26, 0xa5, 0xa6, 0x43, 0xc3, 0x99,
	0x36, 0xe2, 0xa1, 0x94, 0x9a, 0x5c, 0xc1, 0xe4, 0x03, 0xd7, 0x02, 0x95, 0x2a, 0x69, 0x23, 0x43,
	0x1b, 0x57, 0x31, 0x43, 0x71, 0xa1, 0x9f, 0x16, 0x7b, 0xa5, 0xb6, 0xdb, 0x59, 0x8c, 0xaf, 0xc1,
	0x2f, 0x6c, 0x37, 0x9b, 0x0e, 0xcb, 0x04, 0xf1, 0x60, 0xd2, 0xe8, 0xab, 0x28, 0xb8, 0xdd, 0x85,
	0x1d, 0xb6, 0x62, 0xc5, 0x6b, 0x30, 0xe7, 0x31, 0x8a, 0x08, 0x15, 0x1d, 0x1b, 0xc2, 0x21, 0xe0,
	0x3d, 0x86, 0xb3, 0x7a, 0xc1, 0xaf, 0x91, 0xc5, 0x98, 0xfd, 0xc9, 0x8a, 0x6f, 0x16, 0xcc, 0x8f,
	0x99, 0xff, 0x0c, 0x39, 0x32, 0xe4, 0xfa, 0xbb, 0x05, 0xf0, 0x62, 0x75, 0xf3, 0x06, 0xb3, 0x9c,
	0x47, 0x48, 0xde, 0xc2, 0xa4, 0x79, 0x5d, 0x64, 0xee, 0x97, 0xb7, 0xe8, 0xd7, 0xb7, 0xe8, 0xbf,
	0x2c, 0x6e, 0xd1, 0x39, 0x37, 0x9d, 0x1e, 0x3a, 0x44, 0xef, 0xff, 0x2f, 0x3f, 0x7e, 0x7d, 0xb5,
	0xfe, 0x23, 0xd3, 0x20, 0x7f, 0x1a, 0xac, 0x8b, 0x94, 0x0a, 0xd6, 0x85, 0x41, 0x2b, 0x18, 0xd5,
	0x7e, 0x90, 0xd9, 0xbe, 0xbe, 0x71, 0x4d, 0xce, 0xd9, 0x51, 0xf4, 0x2f, 0x1d, 0x3f, 0xf1, 0xf8,
	0x33, 0xe1, 0x70, 0xd2, 0x76, 0x98, 0x38, 0xad, 0x0e, 0xad, 0x1f, 0xc4, 0xb9, 0x78, 0x30, 0x57,
	0x69, 0x3c, 0x32, 0x1a, 0x94, 0xcc, 0x8f, 0x34, 0x82, 0xc4, 0xf0, 0xd6, 0x03, 0xb3, 0x80, 0x67,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x82, 0xcf, 0x69, 0xc5, 0xca, 0x04, 0x00, 0x00,
}
